"""
Django settings for weather project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
ASSETS_DIR = BASE_DIR / "assets"
ICON_DIR = ASSETS_DIR / "icons"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-1h(qb#ofvqo_hzb==53tcdmbait0e+kh1c78%3@&tp_c__r4r8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.staticfiles',
    'rest_framework.apps.RestFrameworkConfig',
    'GisMeteoImage.apps.GismeteoimageConfig',
    'authen.apps.AuthenConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'authen.backend.middleware.AuthenMiddleware',
    'weather.middleware.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'authen.backend.backends.ModelBackend',
    # 'sesame.backends.ModelBackend'
]

AUTH_USER_MODEL = "authen.TGUser"

ROOT_URLCONF = 'weather.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'weather.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

from django.utils.translation import gettext_lazy as _

LANGUAGE_CODE = 'ru-ru'

LANGUAGES = (
    ("en", _("English")),
    ("ru", _("Russian"))
)

# LOCALE_PATHS = ["weather/locale/"]

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/images/'
MEDIA_ROOT = os.path.join(BASE_DIR, "images")

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

GISMETEO_DATA_JSON = "gisemteo-response-test.json"


from GisMeteoImage.core import GismeteoAPI

GISMETEO_API = GismeteoAPI

if DEBUG:
    GISMETEO_API = GISMETEO_API('None')
else:
    GISMETEO_API = GISMETEO_API(os.getenv("GISMETEO_TOKEN"))

GISMETEO_IMAGE_DEFAULT_FONT_TYPE = str(ASSETS_DIR / "Klein-Thin.ttf")
GISMETEO_IMAGE_DEFAULT_FONT_SIZE = 36
GISMETEO_IMAGE_TEMPLATE_PNG = ASSETS_DIR / "template.png"
